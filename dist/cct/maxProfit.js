export function maxProfit(maxTransactions, prices) {
    const n = prices.length;
    if (n <= 1 || maxTransactions === 0)
        return 0;
    if (maxTransactions >= n / 2) {
        let maxProfit = 0;
        for (let i = 1; i < n; i++) {
            if (prices[i] > prices[i - 1]) {
                maxProfit += prices[i] - prices[i - 1];
            }
        }
        return maxProfit;
    }
    const dp = new Array(maxTransactions + 1).fill(0).map(() => new Array(n).fill(0));
    for (let t = 1; t <= maxTransactions; t++) {
        let maxDiff = -prices[0];
        for (let i = 1; i < n; i++) {
            dp[t][i] = Math.max(dp[t][i - 1], prices[i] + maxDiff);
            maxDiff = Math.max(maxDiff, dp[t - 1][i] - prices[i]);
        }
    }
    return dp[maxTransactions][n - 1];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4UHJvZml0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NjdC9tYXhQcm9maXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLFNBQVMsQ0FBQyxlQUF1QixFQUFFLE1BQWdCO0lBQy9ELE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLGVBQWUsS0FBSyxDQUFDO1FBQUUsT0FBTyxDQUFDLENBQUM7SUFFOUMsSUFBSSxlQUFlLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUMxQixJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDbEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN4QixJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUMzQixTQUFTLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDMUM7U0FDSjtRQUNELE9BQU8sU0FBUyxDQUFDO0tBQ3BCO0lBRUQsTUFBTSxFQUFFLEdBQWUsSUFBSSxLQUFLLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFOUYsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLGVBQWUsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN2QyxJQUFJLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDO1lBQ3ZELE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3pEO0tBQ0o7SUFFRCxPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBtYXhQcm9maXQobWF4VHJhbnNhY3Rpb25zOiBudW1iZXIsIHByaWNlczogbnVtYmVyW10pIHtcbiAgICBjb25zdCBuID0gcHJpY2VzLmxlbmd0aDtcbiAgICBpZiAobiA8PSAxIHx8IG1heFRyYW5zYWN0aW9ucyA9PT0gMCkgcmV0dXJuIDA7XG5cbiAgICBpZiAobWF4VHJhbnNhY3Rpb25zID49IG4gLyAyKSB7XG4gICAgICAgIGxldCBtYXhQcm9maXQgPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgaWYgKHByaWNlc1tpXSA+IHByaWNlc1tpIC0gMV0pIHtcbiAgICAgICAgICAgICAgICBtYXhQcm9maXQgKz0gcHJpY2VzW2ldIC0gcHJpY2VzW2kgLSAxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWF4UHJvZml0O1xuICAgIH1cblxuICAgIGNvbnN0IGRwOiBudW1iZXJbXVtdID0gbmV3IEFycmF5KG1heFRyYW5zYWN0aW9ucyArIDEpLmZpbGwoMCkubWFwKCgpID0+IG5ldyBBcnJheShuKS5maWxsKDApKTtcblxuICAgIGZvciAobGV0IHQgPSAxOyB0IDw9IG1heFRyYW5zYWN0aW9uczsgdCsrKSB7XG4gICAgICAgIGxldCBtYXhEaWZmID0gLXByaWNlc1swXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIGRwW3RdW2ldID0gTWF0aC5tYXgoZHBbdF1baSAtIDFdLCBwcmljZXNbaV0gKyBtYXhEaWZmKTtcbiAgICAgICAgICAgIG1heERpZmYgPSBNYXRoLm1heChtYXhEaWZmLCBkcFt0IC0gMV1baV0gLSBwcmljZXNbaV0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRwW21heFRyYW5zYWN0aW9uc11bbiAtIDFdO1xufSJdfQ==