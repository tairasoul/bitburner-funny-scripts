// taken from https://github.com/alainbryden/bitburner-scripts/blob/main/Tasks/contractor.js.solver.js
export function SpiralizeMatrix(data) {
    const spiral = [];
    const m = data.length;
    const n = data[0].length;
    let u = 0;
    let d = m - 1;
    let l = 0;
    let r = n - 1;
    let k = 0;
    while (true) {
        // Up
        for (let col = l; col <= r; col++) {
            spiral[k] = data[u][col];
            ++k;
        }
        if (++u > d) {
            break;
        }
        // Right
        for (let row = u; row <= d; row++) {
            spiral[k] = data[row][r];
            ++k;
        }
        if (--r < l) {
            break;
        }
        // Down
        for (let col = r; col >= l; col--) {
            spiral[k] = data[d][col];
            ++k;
        }
        if (--d < u) {
            break;
        }
        // Left
        for (let row = d; row >= u; row--) {
            spiral[k] = data[row][l];
            ++k;
        }
        if (++l > r) {
            break;
        }
    }
    return spiral;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BpcmFsaXplX21hdHJpeC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jY3Qvc3BpcmFsaXplX21hdHJpeC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzR0FBc0c7QUFFdEcsTUFBTSxVQUFVLGVBQWUsQ0FBQyxJQUFTO0lBQ3JDLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQTtJQUNqQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFBO0lBQ3JCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUE7SUFDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNiLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNULElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDYixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDVCxPQUFPLElBQUksRUFBRTtRQUNULEtBQUs7UUFDTCxLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFO1lBQy9CLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUE7WUFDeEIsRUFBRSxDQUFDLENBQUE7U0FDTjtRQUNELElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1QsTUFBSztTQUNSO1FBQ0QsUUFBUTtRQUNSLEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFDL0IsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtZQUN4QixFQUFFLENBQUMsQ0FBQTtTQUNOO1FBQ0QsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDVCxNQUFLO1NBQ1I7UUFDRCxPQUFPO1FBQ1AsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUMvQixNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1lBQ3hCLEVBQUUsQ0FBQyxDQUFBO1NBQ047UUFDRCxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNULE1BQUs7U0FDUjtRQUNELE9BQU87UUFDUCxLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFO1lBQy9CLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDeEIsRUFBRSxDQUFDLENBQUE7U0FDTjtRQUNELElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1QsTUFBSztTQUNSO0tBQ0o7SUFFRCxPQUFPLE1BQU0sQ0FBQTtBQUNqQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWxhaW5icnlkZW4vYml0YnVybmVyLXNjcmlwdHMvYmxvYi9tYWluL1Rhc2tzL2NvbnRyYWN0b3IuanMuc29sdmVyLmpzXG5cbmV4cG9ydCBmdW5jdGlvbiBTcGlyYWxpemVNYXRyaXgoZGF0YTogYW55KSB7XG4gICAgY29uc3Qgc3BpcmFsID0gW11cbiAgICBjb25zdCBtID0gZGF0YS5sZW5ndGhcbiAgICBjb25zdCBuID0gZGF0YVswXS5sZW5ndGhcbiAgICBsZXQgdSA9IDBcbiAgICBsZXQgZCA9IG0gLSAxXG4gICAgbGV0IGwgPSAwXG4gICAgbGV0IHIgPSBuIC0gMVxuICAgIGxldCBrID0gMFxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIC8vIFVwXG4gICAgICAgIGZvciAobGV0IGNvbCA9IGw7IGNvbCA8PSByOyBjb2wrKykge1xuICAgICAgICAgICAgc3BpcmFsW2tdID0gZGF0YVt1XVtjb2xdXG4gICAgICAgICAgICArK2tcbiAgICAgICAgfVxuICAgICAgICBpZiAoKyt1ID4gZCkge1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgICAvLyBSaWdodFxuICAgICAgICBmb3IgKGxldCByb3cgPSB1OyByb3cgPD0gZDsgcm93KyspIHtcbiAgICAgICAgICAgIHNwaXJhbFtrXSA9IGRhdGFbcm93XVtyXVxuICAgICAgICAgICAgKytrXG4gICAgICAgIH1cbiAgICAgICAgaWYgKC0tciA8IGwpIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgICAgLy8gRG93blxuICAgICAgICBmb3IgKGxldCBjb2wgPSByOyBjb2wgPj0gbDsgY29sLS0pIHtcbiAgICAgICAgICAgIHNwaXJhbFtrXSA9IGRhdGFbZF1bY29sXVxuICAgICAgICAgICAgKytrXG4gICAgICAgIH1cbiAgICAgICAgaWYgKC0tZCA8IHUpIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgICAgLy8gTGVmdFxuICAgICAgICBmb3IgKGxldCByb3cgPSBkOyByb3cgPj0gdTsgcm93LS0pIHtcbiAgICAgICAgICAgIHNwaXJhbFtrXSA9IGRhdGFbcm93XVtsXVxuICAgICAgICAgICAgKytrXG4gICAgICAgIH1cbiAgICAgICAgaWYgKCsrbCA+IHIpIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3BpcmFsXG59Il19