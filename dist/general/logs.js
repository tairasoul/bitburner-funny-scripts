import { RemoteFiles } from "/general/remote-file";
export default class Logs {
    #ns;
    #files;
    #name;
    constructor(ns, name) {
        this.#ns = ns;
        this.#files = new RemoteFiles(this.#ns);
        if (name) {
            this.#name = name;
        }
        else {
            this.#name = ns.pid.toString();
        }
        ns.print(`Logs for this script can be found at /logs/${this.#name}-log.txt on the "home" server.`);
    }
    async Log(text) {
        const time = new Date(Date.now());
        const date = time.toLocaleTimeString();
        if (this.#ns.fileExists(`/logs/${this.#name}-log.txt`, "home"))
            await this.#files.write(`/logs/${this.#name}-log.txt`, "\n", "home", "a");
        await this.#files.write(`/logs/${this.#name}-log.txt`, `[${date}] ${text}`, "home", "a");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZW5lcmFsL2xvZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRW5ELE1BQU0sQ0FBQyxPQUFPLE9BQU8sSUFBSTtJQUNyQixHQUFHLENBQVE7SUFDWCxNQUFNLENBQWM7SUFDcEIsS0FBSyxDQUFTO0lBQ2QsWUFBWSxFQUFTLEVBQUUsSUFBYTtRQUNoQyxJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNkLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3hDLElBQUksSUFBSSxFQUFFO1lBQ04sSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDckI7YUFDSTtZQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNsQztRQUNELEVBQUUsQ0FBQyxLQUFLLENBQUMsOENBQThDLElBQUksQ0FBQyxLQUFLLGdDQUFnQyxDQUFDLENBQUE7SUFDdEcsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBWTtRQUNsQixNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNsQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQTtRQUN0QyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFNBQVMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFLE1BQU0sQ0FBQztZQUFFLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztRQUMxSSxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFLElBQUksSUFBSSxLQUFLLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM3RixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbnMgZnJvbSBcIkBuc1wiO1xuaW1wb3J0IHsgUmVtb3RlRmlsZXMgfSBmcm9tIFwiL2dlbmVyYWwvcmVtb3RlLWZpbGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9ncyB7XG4gICAgI25zOiBucy5OUztcbiAgICAjZmlsZXM6IFJlbW90ZUZpbGVzO1xuICAgICNuYW1lOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IobnM6IG5zLk5TLCBuYW1lPzogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI25zID0gbnM7XG4gICAgICAgIHRoaXMuI2ZpbGVzID0gbmV3IFJlbW90ZUZpbGVzKHRoaXMuI25zKTtcbiAgICAgICAgaWYgKG5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMuI25hbWUgPSBuYW1lO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy4jbmFtZSA9IG5zLnBpZC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIG5zLnByaW50KGBMb2dzIGZvciB0aGlzIHNjcmlwdCBjYW4gYmUgZm91bmQgYXQgL2xvZ3MvJHt0aGlzLiNuYW1lfS1sb2cudHh0IG9uIHRoZSBcImhvbWVcIiBzZXJ2ZXIuYClcbiAgICB9XG5cbiAgICBhc3luYyBMb2codGV4dDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHRpbWUgPSBuZXcgRGF0ZShEYXRlLm5vdygpKTtcbiAgICAgICAgY29uc3QgZGF0ZSA9IHRpbWUudG9Mb2NhbGVUaW1lU3RyaW5nKClcbiAgICAgICAgaWYgKHRoaXMuI25zLmZpbGVFeGlzdHMoYC9sb2dzLyR7dGhpcy4jbmFtZX0tbG9nLnR4dGAsIFwiaG9tZVwiKSkgYXdhaXQgdGhpcy4jZmlsZXMud3JpdGUoYC9sb2dzLyR7dGhpcy4jbmFtZX0tbG9nLnR4dGAsIFwiXFxuXCIsIFwiaG9tZVwiLCBcImFcIik7XG4gICAgICAgIGF3YWl0IHRoaXMuI2ZpbGVzLndyaXRlKGAvbG9ncy8ke3RoaXMuI25hbWV9LWxvZy50eHRgLCBgWyR7ZGF0ZX1dICR7dGV4dH1gLCBcImhvbWVcIiwgXCJhXCIpO1xuICAgIH1cbn0iXX0=